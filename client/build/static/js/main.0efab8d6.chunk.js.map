{"version":3,"sources":["components/Quiz/index.js","pages/Activity.js","components/Table/index.js","pages/Dashboard.js","pages/Module.js","pages/NotFound.js","components/Nav/index.js","App.js","index.js"],"names":["Quiz","questions","questionNumber","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","quizScore","setQuizScore","className","map","onClick","console","log","nextQuestion","length","alert","handleButtonClick","Activity","useStyles","makeStyles","table","minWidth","BasicTable","classes","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","Dashboard","Container","fluid","Module","NotFound","Nav","App","Switch","Route","exact","path","ReactDOM","render","document","getElementById"],"mappings":"8NAkEeA,MAhEf,WACC,IAAMC,EAAY,CACjB,CACCC,eAAgB,EAChBC,cAAe,CACd,CAACC,WAAY,QAASC,WAAW,GACjC,CAACD,WAAY,UAAWC,WAAW,KAGrC,CACCH,eAAgB,EAChBC,cAAe,CACd,CAACC,WAAY,UAAWC,WAAW,GACnC,CAACD,WAAY,WAAYC,WAAW,KAGtC,CACCH,eAAgB,EAChBC,cAAe,CACd,CAACC,WAAY,SAAUC,WAAW,GAClC,CAACD,WAAY,QAASC,WAAW,KAGnC,CACCH,eAAgB,EAChBC,cAAe,CACd,CAACC,WAAY,QAASC,WAAW,GACjC,CAACD,WAAY,QAASC,WAAW,MAKpC,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAiBG,OACF,oCACA,yDACA,yBAAKC,UAAU,oBACbV,EAAUM,GAAiBJ,cAAcS,KAAI,SAACT,GAAD,OAC7C,4BAAQU,QAAS,kBApBM,SAACR,GACtBA,GACHK,EAAaD,EAAY,GACzBK,QAAQC,IAAIN,IAEZK,QAAQC,IAAI,QAEb,IAAMC,EAAeT,EAAkB,EACnCS,EAAef,EAAUgB,OAC5BT,EAAmBQ,GAEnBE,MAAM,yCASkBC,CAAkBhB,EAAcE,aAAaF,EAAcC,kBC9CvEgB,EARE,WACb,OACI,oCACA,oDACA,kBAAC,EAAD,Q,wECIFC,G,MAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,QAKC,SAASC,IACtB,IAAMC,EAAUL,IAiBhB,OACE,kBAACM,EAAA,EAAD,CAAgBC,UAAWC,KACzB,kBAACC,EAAA,EAAD,CAAOnB,UAAWe,EAAQH,MAAOQ,aAAW,gBAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,qBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,cAGJ,kBAACC,EAAA,EAAD,QC1CR,IASeC,EATG,WAChB,OACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,qDACF,kBAACd,EAAD,QCFWe,EALA,WACX,OACI,qDCGOC,EALE,WACb,OACI,sDCOOC,MATf,WACI,OACI,yBAAK/B,UAAU,UACX,mDCuBKgC,MAnBjB,WACI,OACI,kBAAC,IAAD,KACF,6BACI,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAInB,UAAWS,IACjC,kBAACQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAanB,UAAWS,IAE1C,kBAACQ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUnB,UAAWY,IACvC,kBAACK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYnB,UAAWR,IACzC,kBAACyB,EAAA,EAAD,CAAOjB,UAAWa,QCf9BO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0efab8d6.chunk.js","sourcesContent":["import React, { useState }  from \"react\";\n\nfunction Quiz() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionNumber: 1,\n\t\t\tanswerOptions: [\n\t\t\t\t{answerText: 'tener', isCorrect: false},\n\t\t\t\t{answerText: 'atender', isCorrect: true}\n\t\t\t] \n\t\t},\n\t\t{\n\t\t\tquestionNumber: 2,\n\t\t\tanswerOptions: [\n\t\t\t\t{answerText: 'escribe', isCorrect: false},\n\t\t\t\t{answerText: 'describe', isCorrect: true}\n\t\t\t] \n\t\t},\n\t\t{\n\t\t\tquestionNumber: 3,\n\t\t\tanswerOptions: [\n\t\t\t\t{answerText: 'lluvia', isCorrect: true},\n\t\t\t\t{answerText: 'llave', isCorrect: false}\n\t\t\t] \n\t\t},\n\t\t{\n\t\t\tquestionNumber: 4,\n\t\t\tanswerOptions: [\n\t\t\t\t{answerText: 'hielo', isCorrect: true},\n\t\t\t\t{answerText: 'nieve', isCorrect: false}\n\t\t\t] \n\t\t}\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [quizScore, setQuizScore] = useState(1);\n\n\tconst handleButtonClick = (isCorrect) => {\n\t\tif (isCorrect) {\t\n\t\t\tsetQuizScore(quizScore + 1);\n\t\t\tconsole.log(quizScore)\n\t\t} else {\n\t\t\tconsole.log(\"next\")\n\t\t};\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\talert(\"you have reached the end of the quiz!\")\n\t\t}\t\n\t}\n\t\n    return (\n\t\t<>\n\t\t<h2>Select the Correct Answer</h2>\n\t\t<div className=\"answer-selection\">\n\t\t\t{questions[currentQuestion].answerOptions.map((answerOptions)=> (\n\t\t\t\t<button onClick={() => handleButtonClick(answerOptions.isCorrect)}>{answerOptions.answerText}</button>)\n\t\t\t)}\t\t\t\n\t\t</div>\n\t\t</>\n        \n    );\n    \n}\n\nexport default Quiz","import React from \"react\";\nimport Quiz from \"../components/Quiz\";\n\nconst Activity = () => {\n    return (\n        <>\n        <h1>Module 1: Activity 1</h1>\n        <Quiz/>\n        </>\n    )};\n\nexport default Activity;","import React,{useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport API from '../../utils/API';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n\nexport default function BasicTable() {\n  const classes = useStyles();\n\n//Populate the Table with Data from an API\n//   const [ users,setUsers ] = useState([]);\n\n//   useEffect(() => {\n//     const getUsers = async () => {\n//       try {\n//         const userList = await API.search()\n//         setUsers(userList.data.results)\n//       } catch (error) {\n//         console.log(error)        \n//       }\n//     }\n//     getUsers();\n//   }, [])\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell></TableCell>\n            <TableCell>Module Name</TableCell>\n            <TableCell align=\"right\">Completion Status</TableCell>\n            <TableCell align=\"right\">Due Date</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {/* {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell align=\"right\">{row.thumbnail}</TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.status}</TableCell>\n              <TableCell align=\"right\">{row.due}</TableCell>\n            </TableRow>\n          ))} */}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport BasicTable from \"../components/Table\";\n\n\nconst Dashboard = () => {\n  return ( \n    <Container fluid>\n      <h1>My Learning Dashboard</h1>\n    <BasicTable />\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\n\nconst Module = () => {\n    return (\n        <h1>Module things here !</h1>\n    )};\n\nexport default Module;","import React from \"react\";\n\nconst NotFound = () => {\n    return (\n        <h1>Sorry! Page Not Found</h1>\n    )};\n\nexport default NotFound;","import React from \"react\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar\">\n            <a>Navbar Placeholder</a>\n        </nav>\n    );\n    \n}\n\nexport default Nav","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Activity from \"./pages/Activity\"\nimport Dashboard from \"./pages/Dashboard\";\nimport Module from \"./pages/Module\"\nimport NotFound from \"./pages/NotFound\";\nimport Nav from \"./components/Nav\"\n\n\nfunction App() {\n    return (\n        <Router>\n      <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            {/* update these pages to take in parameters to display based on the selected module or activity */}\n            <Route exact path=\"/module\" component={Module} />\n            <Route exact path=\"/activity\" component={Activity} />            \n            <Route component={NotFound} />\n          </Switch>\n\n      </div>\n    </Router>\n    );\n  }\n  \n  export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}